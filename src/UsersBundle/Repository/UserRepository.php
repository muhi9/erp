<?php

namespace UsersBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
	use \BaseBundle\Repository\BaseRepository;

	function findUser($filter){
		$qb = $this->createQueryBuilder('u');
        $qb->select('u','ui');

        if (array_key_exists('withProfile', $filter)) {
            $qb->leftJoin('u.info', 'i');
            if ($filter['withProfile']) {
                $qb->andWhere($qb->expr()->isNotNull('i.id'));
            } else {
                $qb->andWhere($qb->expr()->isNull('i.id'));
            }
        }
        if (!empty($filter['name'])) {
            $qb->leftJoin('u.info', 'ui')
                ->andWhere($qb->expr()->orX(
                    $qb->expr()->like('u.username', ':name'),
                    $qb->expr()->like('ui.firstName', ':name'),
                    $qb->expr()->like('ui.middleName', ':name'),
                    $qb->expr()->like('ui.lastName', ':name')
                ))
                ->setParameter('name', '%'.$filter['name'].'%');
        }

        if (!empty($filter['role'])) {
            $qb->andWhere($qb->expr()->like('u.roles', ':roles'))
                ->setParameter('roles', '%'.$filter['role'].'%');
        }

        return $qb->getQuery()->getResult();
	}
    /**
    *return all user with roles client and student
    */
    function getClients(){
        $qb = $this->createQueryBuilder('u');
        $qb->select('u')
        ->where($qb->expr()->orX(
            $qb->expr()->like('u.roles', ':student'),
            $qb->expr()->like('u.roles', ':client')
        ))
        ->setParameters(['student'=>'%ROLE_STUDENT%','client'=>'%ROLE_CLIENT%']);
        return $qb;
    }
}
